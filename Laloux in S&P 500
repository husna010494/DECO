library(quantmod)
library(SDAResources)
library(RMTstat)
s <- c("BK",
       "STT",
       "CL",
       "ED",
       "KEY",
       "DE",
       "PG",
       "SWK",
       "PNC",
       "CHD",
       "CMA",
       "PFE",
       "AXP",
       "GLW",
       "WFC",
       "TRV",
       "GIS",
       "MTB",
       "FITB",
       "UNP",
       "HBAN",
       "SHW",
       "CPB",
       "TT",
       "KMB",
       "TFC",
       "ZION",
       "LLY",
       "CVX",
       "BALL",
       "PVH",
       "NSC",
       "CNP",
       "FMC",
       "KR",
       "PPG",
       "JCI",
       "CMS",
       "KO",
       "EIX",
       "JNJ",
       "MRO",
       "ABT",
       "MKC",
       "NTRS",
       "EMR",
       "HRL",
       "MRK",
       "GE",
       "HSY",
       "WEC",
       "BDX",
       "IP",
       "PEP",
       "EFX",
       "GD",
       "VFC",
       "GL",
       "WY",
       "MMM",
       "ADM",
       "TGT",
       "F",
       "NWL",
       "PEG",
       "ROK",
       "DUK",
       "LOW",
       "LNC",
       "MMC",
       "PCAR",
       "AEP",
       "ATO",
       "HON",
       "K",
       "OKE",
       "WMB",
       "EVRG",
       "VMC",
       "XEL",
       "ETN",
       "IBM",
       "WHR",
       "ITW",
       "NI",
       "CLX",
       "ETR",
       "AOS",
       "BA",
       "LNT",
       "PH",
       "SPGI",
       "AIG",
       "CAG",
       "CMI",
       "HAL",
       "HES",
       "PPL",
       "SNA",
       "NEM",
       "RTX",
       "DIS",
       "ECL",
       "HAS",
       "TXT",
       "WST",
       "CAT",
       "GPC",
       "SLB",
       "AJG",
       "GWW",
       "MSI",
       "CTAS",
       "MAS",
       "AME",
       "TXN",
       "BAX",
       "TSN",
       "PKI",
       "PGR",
       "TROW",
       "HPQ",
       "APD",
       "MCD",
       "NUE",
       "SYK",
       "TFX",
       "SO",
       "BEN",
       "J",
       "RHI",
       "ROL",
       "ADP",
       "MDT",
       "CINF",
       "BIO",
       "APA",
       "LEN",
       "AFL",
       "DOV",
       "PHM",
       "COO",
       "L",
       "SEE",
       "TER",
       "HUM",
       "JBHT",
       "VTRS",
       "IPG",
       "FRT",
       "RJF",
       "WMT",
       "BBWI",
       "CMCSA",
       "NKE",
       "ADI",
       "BBY",
       "ES",
       "PNR",
       "TYL",
       "AMAT",
       "WRB",
       "FAST",
       "LUV",
       "INTC",
       "USB",
       "WM",
       "AMD",
       "DHR",
       "CAH",
       "SCHW",
       "DVN",
       "FDX",
       "PAYX",
       "RF",
       "CCL",
       "DRE",
       "PSA",
       "UDR",
       "KLAC",
       "TECH",
       "COST",
       "JKHY",
       "AAPL",
       "UNH",
       "HD",
       "LH",
       "MU",
       "TRMB",
       "AZO",
       "UHS",
       "AMGN",
       "CSX",
       "LRCX",
       "NVR",
       "VLO",
       "ABMD",
       "AES",
       "VZ",
       "T",
       "CSCO",
       "FISV",
       "NEE",
       "ALK",
       "MO",
       "PEAK",
       "HOLX",
       "PNW",
       "PTC",
       "DTE",
       "LMT",
       "CVS"
)

############################################################################
#
#
# Here is the list of quotes Q in the S&P 500 stock market index such that
# Q is founded before 1996 or in 1996.
#
# The quotes preceded by '###' are not downloaded by getSymbols of R
#
############################################################################
##s <- c("BK",
##"STT",
##"CL",
###"HIG",
##"ED",
##"KEY",
###"CFG",
###"MCK",
##"DE",
##"PG",
###"BRK.B",
##"SWK",
##"PNC",
##"CHD",
###"CME",
##"CMA",
##"PFE",
##"AXP",
##"GLW",
##"WFC",
##"TRV",
##"GIS",
##"MTB",
##"FITB",
###"IR",
##"UNP",
##"HBAN",
##"SHW",
###"MET",
##"CPB",
###"GS",
###"BF.B",
##"TT",
##"KMB",
##"TFC",
##"ZION",
###"PRU",
##"LLY",
###"MHK",
##"CVX",
###"LIN",
###"PFG",
##"BALL",
###"BWA",
##"PVH",
##"NSC",
##"CNP",
##"FMC",
##"KR",
##"PPG",
##"JCI",
###"AWK",
##"CMS",
##"KO",
##"EIX",
##"JNJ",
##"MRO",
##"ABT",
##"MKC",
##"NTRS",
##"EMR",
##"HRL",
##"MRK",
###"AIZ",
##"GE",
###"AMP",
##"HSY",
##"WEC",
##"BDX",
###"SJM",
##"IP",
##"PEP",
##"EFX",
##"GD",
##"VFC",
##"GL",
##"WY",
##"MMM",
##"ADM",
###"AEE",
##"TGT",
##"F",
##"NWL",
##"PEG",
##"ROK",
##"DUK",
##"LOW",
###"CHRW",
##"LNC",
##"MMC",
##"PCAR",
##"AEP",
##"ATO",
###"CBRE",
##"HON",
##"K",
##"OKE",
###"UPS",
###"ALLE",
###"GM",
##"WMB",
##"EVRG",
###"MCO",
##"VMC",
##"XEL",
##"ETN",
##"IBM",
##"WHR",
###"FCX",
##"ITW",
##"NI",
##"CLX",
##"ETR",
##"AOS",
##"BA",
##"LNT",
##"PH",
##"SPGI",
###"CE",
##"AIG",
##"CAG",
##"CMI",
##"HAL",
##"HES",
###"HLT",
###"EMN",
###"OXY",
##"PPL",
##"SNA",
##"NEM",
##"RTX",
##"DIS",
##"ECL",
##"HAS",
###"NLSN",
##"TXT",
##"WST",
##"CAT",
##"GPC",
##"SLB",
##"AJG",
###"MAR",
##"GWW",
###"ZBH",
##"MSI",
##"CTAS",
###"DAL",
##"MAS",
##"AME",
##"TXN",
###"ALL",
##"BAX",
###"AAP",
###"APH",
###"HSIC",
###"AAL",
###"ODFL",
###"IVZ",
###"MS",
###"NDSN",
##"TSN",
##"PKI",
##"PGR",
##"TROW",
###"DRI",
###"TSCO",
###"BRO",
###"DG",
##"HPQ",
##"APD",
##"MCD",
##"NUE",
##"SYK",
##"TFX",
###"STZ",
###"MTD",
##"SO",
###"CF",
###"EL",
###"CRL",
##"BEN",
##"J",
##"RHI",
##"ROL",
##"ADP",
##"MDT",
##"CINF",
###"IRM",
##"BIO",
###"ZTS",
###"NXPI",
##"APA",
##"LEN",
##"AFL",
##"DOV",
##"PHM",
###"ORLY",
##"COO",
###"EW",
###"KIM",
###"V",
###"WAT",
###"IFF",
###"GNRC",
##"L",
###"PKG",
###"DPZ",
##"SEE",
###"TDY",
##"TER",
###"AVGO",
##"HUM",
##"JBHT",
##"VTRS",
##"IPG",
###"BR",
##"FRT",
##"RJF",
##"WMT",
##"BBWI",
##"CMCSA",
###"REG",
##"NKE",
##"ADI",
##"BBY",
##"ES",
###"MA",
##"PNR",
##"TYL",
##"AMAT",
##"WRB",
##"FAST",
###"DGX",
###"RL",
##"LUV",
###"UAL",
###"FIS",
###"HCA",
##"INTC",
##"USB",
##"WM",
##"AMD",
###"ANSS",
##"DHR",
###"EQR",
###"LDOS",
###"MSCI",
###"O",
###"SYY",
###"ZBRA",
###"BXP",
###"WELL",
###"WDC",
##"CAH",
##"SCHW",
##"DVN",
###"ESS",
##"FDX",
###"NDAQ",
##"PAYX",
##"RF",
###"SBUX",
###"VRSK",
##"CCL",
##"DRE",
###"PENN",
##"PSA",
##"UDR",
###"CZR",
###"CBOE",
###"RE",
###"MSFT",
##"KLAC",
##"TECH",
##"COST",
##"JKHY",
##"AAPL",
###"EXR",
###"MAA",
###"ORCL",
##"UNH",
###"AVB",
###"BIIB",
###"DHI",
###"FDS",
##"HD",
##"LH",
##"MU",
##"TRMB",
##"AZO",
###"BSX",
###"DVA",
###"EXPD",
###"IT",
###"STX",
##"UHS",
##"AMGN",
##"CSX",
###"DISH",
##"LRCX",
###"MOH",
##"NVR",
##"VLO",
##"ABMD",
##"AES",
###"CPT",
###"KDP",
###"ROP",
###"ADBE",
###"ADSK",
###"CI",
###"CPRT",
###"EA",
###"IQV",
###"NLOK",
###"ROST",
###"VNO",
###"AON",
###"D",
###"IDXX",
###"INTU",
###"PLD",
###"SIVB",
###"LUMN",
##"VZ",
##"T",
###"CDW",
###"CNC",
##"CSCO",
##"FISV",
##"NEE",
##"ALK",
##"MO",
###"ABC",
###"CB",
###"DFS",
###"FRC",
##"PEAK",
##"HOLX",
##"PNW",
##"PTC",
###"QCOM",
###"STE",
###"DLTR",
###"MTCH",
###"MGM",
###"OMC",
###"SNPS",
###"GILD",
###"TJX",
###"BLK",
###"CDNS",
###"IEX",
###"LVS",
###"REGN",
###"ACN",
###"BMY",
###"CTXS",
###"GRMN",
###"MCHP",
###"RMD",
###"SBAC",
###"VRTX",
###"AVY",
###"ULTA",
###"INCY",
###"CDAY",
###"NTAP",
###"NRG",
###"KMX",
###"CHTR",
###"CMG",
###"EPAM",
###"HST",
###"MLM",
###"NVDA",
###"POOL",
###"TTWO",
###"TDG",
###"ALB",
###"ARE",
###"AMZN",
###"APTV",
###"COF",
###"CTSH",
###"CCI",
###"TMUS",
###"NOC",
###"AMT",
##"DTE",
###"EBAY",
###"ISRG",
##"LMT",
###"VRSN",
###"BKNG",
##"CVS",
###"EXPE",
###"FFIV",
###"JNPR"
##)


####################################################################################################################
#
#
# The following function estimates the equicorrelation by 2-stage QMLE, based on Figure 1
# of Engle-Kelly(2012), in order to produce the graph of 'No factor, One-Block DECO' in Figure 3(a)
# of Engle-Kelly(2012). 
#
#
b <- function(k,end){
  # The training data starts from k years ago up to end_training,
  # and then estimate the equi-correlation coefficient up to end
  
  end<-as.Date(end)
  start<-end-k*365
  ####################################################################################################################
  #
  # The variable s is the data
  #
  ####################################################################################################################
  l <- length(s)
  dat0 = getSymbols(s[1], src="yahoo", from=start, verbose=TRUE, to=end, auto.assign = F, warnings = FALSE, symbol.lookup = F)
  n = NROW(dat0)  
  dat = array(dim = c(n,NCOL(dat0),l)) ; ret = matrix(nrow = n, ncol = l) 
  for (i in 1:l){
    dat0 = getSymbols(s[i], src="yahoo", from=start,verbose=TRUE, to=end, auto.assign = F, warnings = FALSE, symbol.lookup = F)
    dat[1:n,,i] = dat0 
    ret[2:n,i] = (dat[2:n,4,i]/dat[1:(n-1),4,i] - 1) # returns, close to close, percent
  }
  ret <- 100*na.omit(ret)# Remove the first observation
  time <- index(dat0)[-1]
  colmeans=colMeans(ret) #The means vector of the column from the generated dataset
  mean=matrix(1, nrow=nrow(ret)) %*% colmeans   #the matrix means from the generated dataset    
  sigmahead=1/n*t(ret-mean)%*%(ret-mean) #The centered covariance of the generated dataset
  b=eigen(cov2cor(sigmahead))$values #The eigenvalues
  hist(b[-1],freq=FALSE,breaks=150)
  rpdis1=rmp(l-1, var=1-(b[1]/(l-1)), svr=n/l) #We generate the random numbers that follow Marchenko-Pastur ditribution
  mpdis1=dmp(rpdis1,var=1-(b[1]/(l-1)), svr=n/l, log = FALSE ) #By the previous the random numbers, we compute the probability following Marchenko-Pastur ditribution
  data1=data.frame(x=rpdis1,y=mpdis1) #We make the data  frame containing x for random numbers and y for the probability
  data1a=data1[order(data1$x),] 
  lines(data1a$x,data1a$y, lty=1,lwd=2,type="l",col="red") #We overlay the previous histogram and the plot of Tracy-Widom distribution plot.
}

b(3,"1996-01-01")
